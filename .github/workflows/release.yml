name: release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch: {}

jobs:
  build-deb:
    name: Build .deb (amd64)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'
      - name: Build wheel
        run: |
          python -m pip install --upgrade build
          python -m build
      - name: Install nfpm (standalone binary)
        env:
          NFPM_VERSION: 2.38.1
        run: |
          set -e
          ARCH=$(dpkg --print-architecture)
          case "$ARCH" in
            amd64) NFPM_ARCH="x86_64" ;;
            arm64) NFPM_ARCH="arm64" ;;
            armhf) NFPM_ARCH="armv7" ;;
            *) echo "Unsupported arch: $ARCH"; exit 1 ;;
          esac
          URL="https://github.com/goreleaser/nfpm/releases/download/v${NFPM_VERSION}/nfpm_Linux_${NFPM_ARCH}.tar.gz"
          echo "Downloading $URL"
          curl -fsSL -o /tmp/nfpm.tgz "$URL"
          mkdir -p /tmp/nfpm
          tar -xzf /tmp/nfpm.tgz -C /tmp/nfpm
          # Install binary, whether it's at root or inside a folder
          if [ -f /tmp/nfpm/nfpm ]; then
            sudo install -m 0755 /tmp/nfpm/nfpm /usr/local/bin/nfpm
          else
            sudo install -m 0755 /tmp/nfpm/*/nfpm /usr/local/bin/nfpm
          fi
          nfpm --version
      - name: Import GPG and export public key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          set -e
          echo "$GPG_PRIVATE_KEY" | gpg --batch --passphrase "$GPG_PASSPHRASE" --pinentry-mode loopback --import
          KEY_FPR=$(gpg --list-secret-keys --with-colons | awk -F: '/^sec/{print $5;exit}')
          echo "Using key: $KEY_FPR"
          mkdir -p build/gpg
          gpg --armor --export "$KEY_FPR" > build/gpg/pubkey.asc
      - name: Build deb via nfpm
        env:
          VERSION: ${{ github.ref_name && startsWith(github.ref_name, 'v') && github.ref_name != '' && format('{0}', github.ref_name) || '' }}
        run: |
          set -e
          VERSION="${GITHUB_REF_NAME#v}"
          echo "Using version: $VERSION"
          sed -i -E "s/^version: .*/version: ${VERSION}/" nfpm.yaml
          mkdir -p dist
          nfpm pkg --packager deb -f nfpm.yaml --target dist/gitta_${VERSION}_amd64.deb
      - name: Build archive-keyring deb
        env:
          VERSION: ${{ github.ref_name && startsWith(github.ref_name, 'v') && github.ref_name != '' && format('{0}', github.ref_name) || '' }}
        run: |
          set -e
          VERSION="${GITHUB_REF_NAME#v}"
          sed -i -E "s/^version: .*/version: ${VERSION}/" nfpm.keyring.yaml
          nfpm pkg --packager deb -f nfpm.keyring.yaml --target dist/gitta-archive-keyring_${VERSION}_all.deb
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: debs
          path: dist/*.deb

  publish-apt:
    name: Publish APT repo to GitHub Pages
    runs-on: ubuntu-latest
    needs: smoke-test
    permissions:
      contents: write
    steps:
      - name: Checkout gh-pages
        uses: actions/checkout@v4
        with:
          ref: gh-pages
          path: gh-pages
      - name: Download deb artifacts
        uses: actions/download-artifact@v4
        with:
          name: debs
          path: gh-pages
      - name: Install apt tools
        run: |
          sudo apt-get update -qq
          sudo apt-get install -y -qq apt-utils gnupg
      - name: Import GPG key
        working-directory: gh-pages
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
        run: |
          set -e
          echo "$GPG_PRIVATE_KEY" | gpg --batch --passphrase "$GPG_PASSPHRASE" --pinentry-mode loopback --import
          KEY_FPR=$(gpg --list-secret-keys --with-colons | awk -F: '/^sec/{print $5;exit}')
          echo "$KEY_FPR:6:" | gpg --import-ownertrust
          echo "Using key $KEY_FPR"
      - name: Export public key
        working-directory: gh-pages
        run: |
          KEY_FPR=$(gpg --list-secret-keys --with-colons | awk -F: '/^sec/{print $5;exit}')
          gpg --armor --export "$KEY_FPR" > pubkey.asc
      - name: Publish APT metadata (InRelease + Release.gpg)
        working-directory: gh-pages
        env:
          PACKAGE_NAME: gitta
          ARCHES: amd64
          DEB_GLOB: "*.deb"
        run: |
          bash ../build/publish-apt.sh
      - name: Commit and push
        working-directory: gh-pages
        run: |
          set -e
          git config user.name "github-actions"
          git config user.email "github-actions@users.noreply.github.com"
          git add -A
          git commit -m "Update APT repo for ${GITHUB_REF_NAME}" || echo "No changes"
          git push origin HEAD:gh-pages

  smoke-test:
    name: Smoke test .deb in container
    runs-on: ubuntu-latest
    permissions:
      contents: read
    needs: build-deb
    steps:
      - uses: actions/checkout@v4
      - name: Download deb artifacts
        uses: actions/download-artifact@v4
        with:
          name: debs
          path: dist
      - name: List artifacts
        run: ls -la dist
      - name: Run smoke test
        run: |
          chmod +x scripts/smoke-test.sh
          DEB=$(ls dist/*.deb | head -n1)
          echo "Testing $DEB"
          bash scripts/smoke-test.sh "$DEB"
